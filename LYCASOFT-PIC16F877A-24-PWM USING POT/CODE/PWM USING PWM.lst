

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Oct 24 12:39:54 2018

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
    45  2007  3F3A               	dw 0X3F3A ;#
    46                           	FNCALL	_main,_Lcd_Intialization
    47                           	FNCALL	_main,_Lcd_Command
    48                           	FNCALL	_main,_Lcd_String
    49                           	FNCALL	_main,___awdiv
    50                           	FNCALL	_main,_divider
    51                           	FNCALL	_main,_pluse
    52                           	FNCALL	_divider,___awmod
    53                           	FNCALL	_divider,___awdiv
    54                           	FNCALL	_divider,_Lcd_Data
    55                           	FNCALL	_Lcd_Intialization,_Lcd_Command
    56                           	FNCALL	_Lcd_String,_Lcd_Data
    57                           	FNROOT	_main
    58                           	global	_a
    59                           	global	_b
    60                           	global	_c
    61                           	global	_d
    62                           	global	_m
    63                           	global	_temp1
    64                           	global	_temp2
    65                           	global	_v
    66                           	global	_ADCON0
    67                           psect	text218,local,class=CODE,delta=2
    68                           global __ptext218
    69  0000                     __ptext218:
    70  001F                     _ADCON0	set	31
    71                           	global	_ADRESH
    72  001E                     _ADRESH	set	30
    73                           	global	_CCP1CON
    74  0017                     _CCP1CON	set	23
    75                           	global	_CCPR1H
    76  0016                     _CCPR1H	set	22
    77                           	global	_CCPR1L
    78  0015                     _CCPR1L	set	21
    79                           	global	_PORTA
    80  0005                     _PORTA	set	5
    81                           	global	_PORTC
    82  0007                     _PORTC	set	7
    83                           	global	_PORTD
    84  0008                     _PORTD	set	8
    85                           	global	_T2CON
    86  0012                     _T2CON	set	18
    87                           	global	_TMR2
    88  0011                     _TMR2	set	17
    89                           	global	_CARRY
    90  0018                     _CARRY	set	24
    91                           	global	_GIE
    92  005F                     _GIE	set	95
    93                           	global	_RD2
    94  0042                     _RD2	set	66
    95                           	global	_RD3
    96  0043                     _RD3	set	67
    97                           	global	_ADCON1
    98  009F                     _ADCON1	set	159
    99                           	global	_ADRESL
   100  009E                     _ADRESL	set	158
   101                           	global	_TRISA
   102  0085                     _TRISA	set	133
   103                           	global	_TRISC
   104  0087                     _TRISC	set	135
   105                           	global	_TRISD
   106  0088                     _TRISD	set	136
   107                           	global	_EEADR
   108  010D                     _EEADR	set	269
   109                           	global	_EEDATA
   110  010C                     _EEDATA	set	268
   111                           	global	_EECON1
   112  018C                     _EECON1	set	396
   113                           	global	_EECON2
   114  018D                     _EECON2	set	397
   115                           	global	_RD
   116  0C60                     _RD	set	3168
   117                           	global	_WR
   118  0C61                     _WR	set	3169
   119                           	global	_WREN
   120  0C62                     _WREN	set	3170
   121                           psect	strings,class=STRING,delta=2
   122                           global __pstrings
   123  0003                     __pstrings:
   124                           ;	global	stringdir,stringtab,__stringbase
   125  0003                     stringtab:
   126                           ;	String table - string pointers are 1 byte each
   127  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   128  0003  3000               movlw high(stringdir)
   129  0004  008A               movwf pclath
   130  0005  0804               movf fsr,w
   131  0006  0A84               incf fsr
   132  0007  0782               	addwf pc
   133  0008                     __stringbase:
   134  0008  3400               	retlw	0
   135                           psect	strings
   136                           	
   137  0009                     STR_2:	
   138  0009  3450               	retlw	80	;'P'
   139  000A  344F               	retlw	79	;'O'
   140  000B  3454               	retlw	84	;'T'
   141  000C  3420               	retlw	32	;' '
   142  000D  3456               	retlw	86	;'V'
   143  000E  3441               	retlw	65	;'A'
   144  000F  344C               	retlw	76	;'L'
   145  0010  3455               	retlw	85	;'U'
   146  0011  3445               	retlw	69	;'E'
   147  0012  343A               	retlw	58	;':'
   148  0013  3400               	retlw	0
   149                           psect	strings
   150                           	
   151  0014                     STR_1:	
   152  0014  344C               	retlw	76	;'L'
   153  0015  3459               	retlw	89	;'Y'
   154  0016  3443               	retlw	67	;'C'
   155  0017  3441               	retlw	65	;'A'
   156  0018  3453               	retlw	83	;'S'
   157  0019  344F               	retlw	79	;'O'
   158  001A  3446               	retlw	70	;'F'
   159  001B  3454               	retlw	84	;'T'
   160  001C  3400               	retlw	0
   161                           psect	strings
   162                           	file	"PWM USING PWM.as"
   163                           	line	#
   164                           psect cinit,class=CODE,delta=2
   165                           global start_initialization
   166  0519                     start_initialization:
   167                           
   168                           psect	bssBANK0,class=BANK0,space=1
   169                           global __pbssBANK0
   170  0020                     __pbssBANK0:
   171  0020                     _a:
   172  0020                            ds      2
   173                           
   174  0022                     _b:
   175  0022                            ds      2
   176                           
   177  0024                     _c:
   178  0024                            ds      2
   179                           
   180  0026                     _d:
   181  0026                            ds      2
   182                           
   183  0028                     _m:
   184  0028                            ds      2
   185                           
   186  002A                     _temp1:
   187  002A                            ds      2
   188                           
   189  002C                     _temp2:
   190  002C                            ds      2
   191                           
   192  002E                     _v:
   193  002E                            ds      2
   194                           
   195                           psect clrtext,class=CODE,delta=2
   196                           global clear_ram
   197                           ;	Called with FSR containing the base address, and
   198                           ;	W with the last address+1
   199  0506                     clear_ram:
   200  0506  0064               	clrwdt			;clear the watchdog before getting into this loop
   201  0507                     clrloop:
   202  0507  0180               	clrf	indf		;clear RAM location pointed to by FSR
   203  0508  0A84               	incf	fsr,f		;increment pointer
   204  0509  0604               	xorwf	fsr,w		;XOR with final address
   205  050A  1903               	btfsc	status,2	;have we reached the end yet?
   206  050B  3400               	retlw	0		;all done for this memory range, return
   207  050C  0604               	xorwf	fsr,w		;XOR again to restore value
   208  050D  2D07               	goto	clrloop		;do the next byte
   209                           
   210                           ; Clear objects allocated to BANK0
   211                           psect cinit,class=CODE,delta=2
   212  0519  1383               	bcf	status, 7	;select IRP bank0
   213  051A  3020               	movlw	low(__pbssBANK0)
   214  051B  0084               	movwf	fsr
   215  051C  3030               	movlw	low((__pbssBANK0)+010h)
   216  051D  120A  118A  2506   	fcall	clear_ram
              120A  118A         
   217                           psect cinit,class=CODE,delta=2
   218                           global end_of_initialization
   219                           
   220                           ;End of C runtime variable initialization code
   221                           
   222  0522                     end_of_initialization:
   223  0522  0183               clrf status
   224  0523  120A  118A  2F47   ljmp _main	;jump to C main() function
   225                           psect	cstackCOMMON,class=COMMON,space=1
   226                           global __pcstackCOMMON
   227  0070                     __pcstackCOMMON:
   228                           	global	?_Lcd_Command
   229  0070                     ?_Lcd_Command:	; 0 bytes @ 0x0
   230                           	global	??_Lcd_Command
   231  0070                     ??_Lcd_Command:	; 0 bytes @ 0x0
   232                           	global	?_Lcd_Data
   233  0070                     ?_Lcd_Data:	; 0 bytes @ 0x0
   234                           	global	??_Lcd_Data
   235  0070                     ??_Lcd_Data:	; 0 bytes @ 0x0
   236                           	global	?_Lcd_String
   237  0070                     ?_Lcd_String:	; 0 bytes @ 0x0
   238                           	global	?_Lcd_Intialization
   239  0070                     ?_Lcd_Intialization:	; 0 bytes @ 0x0
   240                           	global	?_pluse
   241  0070                     ?_pluse:	; 0 bytes @ 0x0
   242                           	global	?_main
   243  0070                     ?_main:	; 0 bytes @ 0x0
   244                           	global	?___awdiv
   245  0070                     ?___awdiv:	; 2 bytes @ 0x0
   246                           	global	?___awmod
   247  0070                     ?___awmod:	; 2 bytes @ 0x0
   248                           	global	pluse@x
   249  0070                     pluse@x:	; 2 bytes @ 0x0
   250                           	global	___awdiv@divisor
   251  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   252                           	global	___awmod@divisor
   253  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   254  0070                     	ds	2
   255                           	global	??_pluse
   256  0072                     ??_pluse:	; 0 bytes @ 0x2
   257                           	global	Lcd_Command@cmd
   258  0072                     Lcd_Command@cmd:	; 1 bytes @ 0x2
   259                           	global	Lcd_Data@Data
   260  0072                     Lcd_Data@Data:	; 1 bytes @ 0x2
   261                           	global	pluse@Temp
   262  0072                     pluse@Temp:	; 2 bytes @ 0x2
   263                           	global	___awdiv@dividend
   264  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   265                           	global	___awmod@dividend
   266  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   267  0072                     	ds	1
   268                           	global	??_Lcd_String
   269  0073                     ??_Lcd_String:	; 0 bytes @ 0x3
   270                           	global	??_Lcd_Intialization
   271  0073                     ??_Lcd_Intialization:	; 0 bytes @ 0x3
   272  0073                     	ds	1
   273                           	global	??___awdiv
   274  0074                     ??___awdiv:	; 0 bytes @ 0x4
   275                           	global	??___awmod
   276  0074                     ??___awmod:	; 0 bytes @ 0x4
   277                           	global	Lcd_String@Str
   278  0074                     Lcd_String@Str:	; 1 bytes @ 0x4
   279  0074                     	ds	1
   280                           	global	___awdiv@counter
   281  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   282                           	global	___awmod@counter
   283  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   284  0075                     	ds	1
   285                           	global	___awdiv@sign
   286  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   287                           	global	___awmod@sign
   288  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   289  0076                     	ds	1
   290                           	global	___awdiv@quotient
   291  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   292  0077                     	ds	2
   293                           	global	?_divider
   294  0079                     ?_divider:	; 0 bytes @ 0x9
   295                           	global	divider@x
   296  0079                     divider@x:	; 2 bytes @ 0x9
   297  0079                     	ds	2
   298                           	global	??_divider
   299  007B                     ??_divider:	; 0 bytes @ 0xB
   300                           	global	??_main
   301  007B                     ??_main:	; 0 bytes @ 0xB
   302  007B                     	ds	3
   303                           psect	cstackBANK0,class=BANK0,space=1
   304                           global __pcstackBANK0
   305  0030                     __pcstackBANK0:
   306                           	global	divider@Dig1
   307  0030                     divider@Dig1:	; 2 bytes @ 0x0
   308  0030                     	ds	2
   309                           	global	divider@Dig2
   310  0032                     divider@Dig2:	; 2 bytes @ 0x2
   311  0032                     	ds	2
   312                           	global	divider@Dig3
   313  0034                     divider@Dig3:	; 2 bytes @ 0x4
   314  0034                     	ds	2
   315                           	global	divider@Dig4
   316  0036                     divider@Dig4:	; 2 bytes @ 0x6
   317  0036                     	ds	2
   318                           	global	divider@Temp
   319  0038                     divider@Temp:	; 2 bytes @ 0x8
   320  0038                     	ds	2
   321 ;;Data sizes: Strings 20, constant 0, data 0, bss 16, persistent 0 stack 0
   322 ;;Auto spaces:   Size  Autos    Used
   323 ;; COMMON          14     14      14
   324 ;; BANK0           80     10      26
   325 ;; BANK1           80      0       0
   326 ;; BANK3           96      0       0
   327 ;; BANK2           96      0       0
   328                           
   329 ;;
   330 ;; Pointer list with targets:
   331                           
   332 ;; ?___awdiv	int  size(1) Largest target is 0
   333 ;;
   334 ;; ?___awmod	int  size(1) Largest target is 0
   335 ;;
   336 ;; Lcd_String@Str	PTR const unsigned char  size(1) Largest target is 11
   337 ;;		 -> STR_2(CODE[11]), STR_1(CODE[9]), 
   338 ;;
   339                           
   340                           
   341 ;;
   342 ;; Critical Paths under _main in COMMON
   343 ;;
   344 ;;   _main->_divider
   345 ;;   _divider->___awdiv
   346 ;;   _Lcd_Intialization->_Lcd_Command
   347 ;;   _Lcd_String->_Lcd_Data
   348 ;;
   349 ;; Critical Paths under _main in BANK0
   350 ;;
   351 ;;   _main->_divider
   352 ;;
   353 ;; Critical Paths under _main in BANK1
   354 ;;
   355 ;;   None.
   356 ;;
   357 ;; Critical Paths under _main in BANK3
   358 ;;
   359 ;;   None.
   360 ;;
   361 ;; Critical Paths under _main in BANK2
   362 ;;
   363 ;;   None.
   364                           
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   367 ;;
   368                           
   369 ;;
   370 ;;Call Graph Tables:
   371 ;;
   372 ;; ---------------------------------------------------------------------------------
   373 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   374 ;; ---------------------------------------------------------------------------------
   375 ;; (0) _main                                                 5     5      0    1411
   376 ;;                                             11 COMMON     3     3      0
   377 ;;                  _Lcd_Intialization
   378 ;;                        _Lcd_Command
   379 ;;                         _Lcd_String
   380 ;;                            ___awdiv
   381 ;;                            _divider
   382 ;;                              _pluse
   383 ;; ---------------------------------------------------------------------------------
   384 ;; (1) _divider                                             12    10      2     889
   385 ;;                                              9 COMMON     2     0      2
   386 ;;                                              0 BANK0     10    10      0
   387 ;;                            ___awmod
   388 ;;                            ___awdiv
   389 ;;                           _Lcd_Data
   390 ;; ---------------------------------------------------------------------------------
   391 ;; (1) _Lcd_Intialization                                    0     0      0      44
   392 ;;                        _Lcd_Command
   393 ;; ---------------------------------------------------------------------------------
   394 ;; (1) _Lcd_String                                           2     2      0      89
   395 ;;                                              3 COMMON     2     2      0
   396 ;;                           _Lcd_Data
   397 ;; ---------------------------------------------------------------------------------
   398 ;; (2) _Lcd_Data                                             3     3      0      44
   399 ;;                                              0 COMMON     3     3      0
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (1) _Lcd_Command                                          3     3      0      44
   402 ;;                                              0 COMMON     3     3      0
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (2) ___awmod                                              7     3      4     296
   405 ;;                                              0 COMMON     7     3      4
   406 ;; ---------------------------------------------------------------------------------
   407 ;; (2) ___awdiv                                              9     5      4     300
   408 ;;                                              0 COMMON     9     5      4
   409 ;; ---------------------------------------------------------------------------------
   410 ;; (1) _pluse                                                4     2      2      45
   411 ;;                                              0 COMMON     4     2      2
   412 ;; ---------------------------------------------------------------------------------
   413 ;; Estimated maximum stack depth 2
   414 ;; ---------------------------------------------------------------------------------
   415                           
   416 ;; Call Graph Graphs:
   417                           
   418 ;; _main (ROOT)
   419 ;;   _Lcd_Intialization
   420 ;;     _Lcd_Command
   421 ;;   _Lcd_Command
   422 ;;   _Lcd_String
   423 ;;     _Lcd_Data
   424 ;;   ___awdiv
   425 ;;   _divider
   426 ;;     ___awmod
   427 ;;     ___awdiv
   428 ;;     _Lcd_Data
   429 ;;   _pluse
   430 ;;
   431                           
   432 ;; Address spaces:
   433                           
   434 ;;Name               Size   Autos  Total    Cost      Usage
   435 ;;BITCOMMON            E      0       0       0        0.0%
   436 ;;EEDATA             100      0       0       0        0.0%
   437 ;;NULL                 0      0       0       0        0.0%
   438 ;;CODE                 0      0       0       0        0.0%
   439 ;;COMMON               E      E       E       1      100.0%
   440 ;;BITSFR0              0      0       0       1        0.0%
   441 ;;SFR0                 0      0       0       1        0.0%
   442 ;;BITSFR1              0      0       0       2        0.0%
   443 ;;SFR1                 0      0       0       2        0.0%
   444 ;;STACK                0      0       2       2        0.0%
   445 ;;ABS                  0      0      28       3        0.0%
   446 ;;BITBANK0            50      0       0       4        0.0%
   447 ;;BITSFR3              0      0       0       4        0.0%
   448 ;;SFR3                 0      0       0       4        0.0%
   449 ;;BANK0               50      A      1A       5       32.5%
   450 ;;BITSFR2              0      0       0       5        0.0%
   451 ;;SFR2                 0      0       0       5        0.0%
   452 ;;BITBANK1            50      0       0       6        0.0%
   453 ;;BANK1               50      0       0       7        0.0%
   454 ;;BITBANK3            60      0       0       8        0.0%
   455 ;;BANK3               60      0       0       9        0.0%
   456 ;;BITBANK2            60      0       0      10        0.0%
   457 ;;BANK2               60      0       0      11        0.0%
   458 ;;DATA                 0      0      2A      12        0.0%
   459                           
   460                           	global	_main
   461                           psect	maintext,global,class=CODE,delta=2
   462                           global __pmaintext
   463  0747                     __pmaintext:
   464                           
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 84 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  i               2    0        int 
   472 ;; Return value:  Size  Location     Type
   473 ;;		None               void
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 17F/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0
   483 ;;      Temps:          3       0       0       0       0
   484 ;;      Totals:         3       0       0       0       0
   485 ;;Total ram usage:        3 bytes
   486 ;; Hardware stack levels required when called:    2
   487 ;; This function calls:
   488 ;;		_Lcd_Intialization
   489 ;;		_Lcd_Command
   490 ;;		_Lcd_String
   491 ;;		___awdiv
   492 ;;		_divider
   493 ;;		_pluse
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           psect	maintext
   499                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
   500                           	line	84
   501                           	global	__size_of_main
   502  00B9                     	__size_of_main	equ	__end_of_main-_main
   503                           	
   504  0747                     _main:	
   505                           	opt	stack 6
   506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   507                           	line	86
   508                           	
   509  0747                     l3029:	
   510                           ;PWM USING PWM.c: 85: int i;
   511                           ;PWM USING PWM.c: 86: TRISA=0X01;
   512  0747  3001               	movlw	(01h)
   513  0748  1683               	bsf	status, 5	;RP0=1, select bank1
   514  0749  1303               	bcf	status, 6	;RP1=0, select bank1
   515  074A  0085               	movwf	(133)^080h	;volatile
   516                           	line	87
   517                           	
   518  074B                     l3031:	
   519                           ;PWM USING PWM.c: 87: PORTA=0X00;
   520  074B  1283               	bcf	status, 5	;RP0=0, select bank0
   521  074C  1303               	bcf	status, 6	;RP1=0, select bank0
   522  074D  0185               	clrf	(5)	;volatile
   523                           	line	88
   524                           	
   525  074E                     l3033:	
   526                           ;PWM USING PWM.c: 88: TRISC=0X00;
   527  074E  1683               	bsf	status, 5	;RP0=1, select bank1
   528  074F  1303               	bcf	status, 6	;RP1=0, select bank1
   529  0750  0187               	clrf	(135)^080h	;volatile
   530                           	line	89
   531                           	
   532  0751                     l3035:	
   533                           ;PWM USING PWM.c: 89: PORTC=0X00;
   534  0751  1283               	bcf	status, 5	;RP0=0, select bank0
   535  0752  1303               	bcf	status, 6	;RP1=0, select bank0
   536  0753  0187               	clrf	(7)	;volatile
   537                           	line	90
   538                           	
   539  0754                     l3037:	
   540                           ;PWM USING PWM.c: 90: TRISD=0X00;
   541  0754  1683               	bsf	status, 5	;RP0=1, select bank1
   542  0755  1303               	bcf	status, 6	;RP1=0, select bank1
   543  0756  0188               	clrf	(136)^080h	;volatile
   544                           	line	91
   545                           	
   546  0757                     l3039:	
   547                           ;PWM USING PWM.c: 91: PORTD=0X00;
   548  0757  1283               	bcf	status, 5	;RP0=0, select bank0
   549  0758  1303               	bcf	status, 6	;RP1=0, select bank0
   550  0759  0188               	clrf	(8)	;volatile
   551                           	line	93
   552                           	
   553  075A                     l3041:	
   554                           ;PWM USING PWM.c: 93: ADCON0=0X01;
   555  075A  3001               	movlw	(01h)
   556  075B  009F               	movwf	(31)	;volatile
   557                           	line	94
   558                           	
   559  075C                     l3043:	
   560                           ;PWM USING PWM.c: 94: ADCON1=0Xce;
   561  075C  30CE               	movlw	(0CEh)
   562  075D  1683               	bsf	status, 5	;RP0=1, select bank1
   563  075E  1303               	bcf	status, 6	;RP1=0, select bank1
   564  075F  009F               	movwf	(159)^080h	;volatile
   565                           	line	96
   566                           	
   567  0760                     l3045:	
   568                           ;PWM USING PWM.c: 96: CCP1CON=0X0C;
   569  0760  300C               	movlw	(0Ch)
   570  0761  1283               	bcf	status, 5	;RP0=0, select bank0
   571  0762  1303               	bcf	status, 6	;RP1=0, select bank0
   572  0763  0097               	movwf	(23)	;volatile
   573                           	line	97
   574                           ;PWM USING PWM.c: 97: TMR2=0;
   575  0764  0191               	clrf	(17)	;volatile
   576                           	line	98
   577                           	
   578  0765                     l3047:	
   579                           ;PWM USING PWM.c: 98: T2CON=0X07;
   580  0765  3007               	movlw	(07h)
   581  0766  0092               	movwf	(18)	;volatile
   582                           	line	99
   583                           	
   584  0767                     l3049:	
   585                           ;PWM USING PWM.c: 99: CCPR1H=0X00;
   586  0767  0196               	clrf	(22)	;volatile
   587                           	line	100
   588                           	
   589  0768                     l3051:	
   590                           ;PWM USING PWM.c: 100: CCPR1L=0X00;
   591  0768  0195               	clrf	(21)	;volatile
   592                           	line	102
   593                           	
   594  0769                     l3053:	
   595                           ;PWM USING PWM.c: 102: Lcd_Intialization();
   596  0769  120A  118A  2526   	fcall	_Lcd_Intialization
              120A  118A         
   597                           	line	103
   598                           	
   599  076E                     l3055:	
   600                           ;PWM USING PWM.c: 103: _delay((unsigned long)((100)*(20e6/4000.0)));
   601                           	opt asmopt_off
   602  076E  3003               movlw  3
   603  076F  00FD               movwf	((??_main+0)+0+2),f
   604  0770  308A               movlw	138
   605  0771  00FC               movwf	((??_main+0)+0+1),f
   606  0772  3056               	movlw	86
   607  0773  00FB               movwf	((??_main+0)+0),f
   608  0774                     u2497:
   609  0774  0BFB               	decfsz	((??_main+0)+0),f
   610  0775  2F74               	goto	u2497
   611  0776  0BFC               	decfsz	((??_main+0)+0+1),f
   612  0777  2F74               	goto	u2497
   613  0778  0BFD               	decfsz	((??_main+0)+0+2),f
   614  0779  2F74               	goto	u2497
   615  077A  2F7B               	nop2
   616                           opt asmopt_on
   617                           
   618                           	line	105
   619                           	
   620  077B                     l3057:	
   621                           ;PWM USING PWM.c: 105: Lcd_Command(0x80);
   622  077B  3080               	movlw	(080h)
   623  077C  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
   624                           	line	106
   625                           	
   626  0781                     l3059:	
   627                           ;PWM USING PWM.c: 106: Lcd_String("LYCASOFT");
   628  0781  300C               	movlw	((STR_1-__stringbase))&0ffh
   629  0782  120A  118A  2539   	fcall	_Lcd_String
              120A  118A         
   630                           	line	107
   631                           	
   632  0787                     l3061:	
   633                           ;PWM USING PWM.c: 107: Lcd_Command(0xc0);
   634  0787  30C0               	movlw	(0C0h)
   635  0788  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
   636                           	line	108
   637                           	
   638  078D                     l3063:	
   639                           ;PWM USING PWM.c: 108: Lcd_String("POT VALUE:");
   640  078D  3001               	movlw	((STR_2-__stringbase))&0ffh
   641  078E  120A  118A  2539   	fcall	_Lcd_String
              120A  118A         
   642  0793  2F96               	goto	l3065
   643                           	line	110
   644                           ;PWM USING PWM.c: 110: while(1)
   645                           	
   646  0794                     l724:	
   647                           	line	112
   648                           ;PWM USING PWM.c: 111: {
   649                           ;PWM USING PWM.c: 112: while((ADCON0=0X01|0X04)==1);
   650  0794  2F96               	goto	l3065
   651                           	
   652  0795                     l726:	
   653  0795  2F96               	goto	l3065
   654                           	
   655  0796                     l725:	
   656                           	
   657  0796                     l3065:	
   658  0796  3005               	movlw	(05h)
   659  0797  1283               	bcf	status, 5	;RP0=0, select bank0
   660  0798  1303               	bcf	status, 6	;RP1=0, select bank0
   661  0799  009F               	movwf	(31)	;volatile
   662  079A  3A01               	xorlw	01h
   663  079B  1903               	skipnz
   664  079C  2F9E               	goto	u2481
   665  079D  2F9F               	goto	u2480
   666  079E                     u2481:
   667  079E  2F96               	goto	l3065
   668  079F                     u2480:
   669  079F  2FA0               	goto	l3067
   670                           	
   671  07A0                     l727:	
   672                           	line	113
   673                           	
   674  07A0                     l3067:	
   675                           ;PWM USING PWM.c: 113: v=(ADRESH<<8)+ADRESL;
   676  07A0  081E               	movf	(30),w	;volatile
   677  07A1  00FB               	movwf	(??_main+0)+0
   678  07A2  01FC               	clrf	(??_main+0)+0+1
   679  07A3  087B               	movf	(??_main+0)+0,w
   680  07A4  00FC               	movwf	(??_main+0)+1
   681  07A5  01FB               	clrf	(??_main+0)+0
   682  07A6  1683               	bsf	status, 5	;RP0=1, select bank1
   683  07A7  1303               	bcf	status, 6	;RP1=0, select bank1
   684  07A8  081E               	movf	(158)^080h,w	;volatile
   685  07A9  077B               	addwf	0+(??_main+0)+0,w
   686  07AA  1283               	bcf	status, 5	;RP0=0, select bank0
   687  07AB  1303               	bcf	status, 6	;RP1=0, select bank0
   688  07AC  00AE               	movwf	(_v)
   689  07AD  3000               	movlw	0
   690  07AE  1803               	skipnc
   691  07AF  3001               	movlw	1
   692  07B0  077C               	addwf	1+(??_main+0)+0,w
   693  07B1  00AF               	movwf	1+(_v)
   694                           	line	114
   695                           	
   696  07B2                     l3069:	
   697                           ;PWM USING PWM.c: 114: v=v/4;
   698  07B2  3004               	movlw	low(04h)
   699  07B3  00F0               	movwf	(?___awdiv)
   700  07B4  3000               	movlw	high(04h)
   701  07B5  00F1               	movwf	((?___awdiv))+1
   702  07B6  082F               	movf	(_v+1),w
   703  07B7  01F3               	clrf	1+(?___awdiv)+02h
   704  07B8  07F3               	addwf	1+(?___awdiv)+02h
   705  07B9  082E               	movf	(_v),w
   706  07BA  01F2               	clrf	0+(?___awdiv)+02h
   707  07BB  07F2               	addwf	0+(?___awdiv)+02h
   708                           
   709  07BC  120A  118A  261E   	fcall	___awdiv
              120A  118A         
   710  07C1  0871               	movf	(1+(?___awdiv)),w
   711  07C2  1283               	bcf	status, 5	;RP0=0, select bank0
   712  07C3  1303               	bcf	status, 6	;RP1=0, select bank0
   713  07C4  01AF               	clrf	(_v+1)
   714  07C5  07AF               	addwf	(_v+1)
   715  07C6  0870               	movf	(0+(?___awdiv)),w
   716  07C7  01AE               	clrf	(_v)
   717  07C8  07AE               	addwf	(_v)
   718                           
   719                           	line	115
   720                           	
   721  07C9                     l3071:	
   722                           ;PWM USING PWM.c: 115: Lcd_Command(0xCA);
   723  07C9  30CA               	movlw	(0CAh)
   724  07CA  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
   725                           	line	116
   726                           	
   727  07CF                     l3073:	
   728                           ;PWM USING PWM.c: 116: divider(v);
   729  07CF  1283               	bcf	status, 5	;RP0=0, select bank0
   730  07D0  1303               	bcf	status, 6	;RP1=0, select bank0
   731  07D1  082F               	movf	(_v+1),w
   732  07D2  01FA               	clrf	(?_divider+1)
   733  07D3  07FA               	addwf	(?_divider+1)
   734  07D4  082E               	movf	(_v),w
   735  07D5  01F9               	clrf	(?_divider)
   736  07D6  07F9               	addwf	(?_divider)
   737                           
   738  07D7  120A  118A  2692   	fcall	_divider
              120A  118A         
   739                           	line	117
   740                           	
   741  07DC                     l3075:	
   742                           ;PWM USING PWM.c: 117: _delay((unsigned long)((10)*(20e6/4000.0)));
   743                           	opt asmopt_off
   744  07DC  3041               movlw	65
   745  07DD  00FC               movwf	((??_main+0)+0+1),f
   746  07DE  30EE               	movlw	238
   747  07DF  00FB               movwf	((??_main+0)+0),f
   748  07E0                     u2507:
   749  07E0  0BFB               	decfsz	((??_main+0)+0),f
   750  07E1  2FE0               	goto	u2507
   751  07E2  0BFC               	decfsz	((??_main+0)+0+1),f
   752  07E3  2FE0               	goto	u2507
   753  07E4  0064               	clrwdt
   754                           opt asmopt_on
   755                           
   756                           	line	119
   757                           	
   758  07E5                     l3077:	
   759                           ;PWM USING PWM.c: 119: pluse(v);
   760  07E5  1283               	bcf	status, 5	;RP0=0, select bank0
   761  07E6  1303               	bcf	status, 6	;RP1=0, select bank0
   762  07E7  082F               	movf	(_v+1),w
   763  07E8  01F1               	clrf	(?_pluse+1)
   764  07E9  07F1               	addwf	(?_pluse+1)
   765  07EA  082E               	movf	(_v),w
   766  07EB  01F0               	clrf	(?_pluse)
   767  07EC  07F0               	addwf	(?_pluse)
   768                           
   769  07ED  120A  118A  250E   	fcall	_pluse
              120A  118A         
   770                           	line	120
   771                           	
   772  07F2                     l3079:	
   773                           ;PWM USING PWM.c: 120: _delay((unsigned long)((10)*(20e6/4000.0)));
   774                           	opt asmopt_off
   775  07F2  3041               movlw	65
   776  07F3  00FC               movwf	((??_main+0)+0+1),f
   777  07F4  30EE               	movlw	238
   778  07F5  00FB               movwf	((??_main+0)+0),f
   779  07F6                     u2517:
   780  07F6  0BFB               	decfsz	((??_main+0)+0),f
   781  07F7  2FF6               	goto	u2517
   782  07F8  0BFC               	decfsz	((??_main+0)+0+1),f
   783  07F9  2FF6               	goto	u2517
   784  07FA  0064               	clrwdt
   785                           opt asmopt_on
   786                           
   787  07FB  2F96               	goto	l3065
   788                           	line	121
   789                           	
   790  07FC                     l728:	
   791                           	line	110
   792  07FC  2F96               	goto	l3065
   793                           	
   794  07FD                     l729:	
   795                           	line	122
   796                           	
   797  07FD                     l730:	
   798                           	global	start
   799  07FD  120A  118A  2800   	ljmp	start
   800                           	opt stack 0
   801                           GLOBAL	__end_of_main
   802  0800                     	__end_of_main:
   803 ;; =============== function _main ends ============
   804                           
   805                           	signat	_main,88
   806                           	global	_divider
   807                           psect	text219,local,class=CODE,delta=2
   808                           global __ptext219
   809  0692                     __ptext219:
   810                           
   811 ;; *************** function _divider *****************
   812 ;; Defined at:
   813 ;;		line 59 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;  x               2    9[COMMON] int 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  Temp            2    8[BANK0 ] int 
   818 ;;  Dig4            2    6[BANK0 ] int 
   819 ;;  Dig3            2    4[BANK0 ] int 
   820 ;;  Dig2            2    2[BANK0 ] int 
   821 ;;  Dig1            2    0[BANK0 ] int 
   822 ;; Return value:  Size  Location     Type
   823 ;;		None               void
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         2       0       0       0       0
   832 ;;      Locals:         0      10       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         2      10       0       0       0
   835 ;;Total ram usage:       12 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    1
   838 ;; This function calls:
   839 ;;		___awmod
   840 ;;		___awdiv
   841 ;;		_Lcd_Data
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           psect	text219
   847                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
   848                           	line	59
   849                           	global	__size_of_divider
   850  00B5                     	__size_of_divider	equ	__end_of_divider-_divider
   851                           	
   852  0692                     _divider:	
   853                           	opt	stack 6
   854                           ; Regs used in _divider: [wreg+status,2+status,0+pclath+cstack]
   855                           	line	62
   856                           	
   857  0692                     l3007:	
   858                           ;PWM USING PWM.c: 60: int Temp,Dig1,Dig2,Dig3,Dig4;
   859                           ;PWM USING PWM.c: 62: Temp = x;
   860  0692  087A               	movf	(divider@x+1),w
   861  0693  1283               	bcf	status, 5	;RP0=0, select bank0
   862  0694  1303               	bcf	status, 6	;RP1=0, select bank0
   863  0695  01B9               	clrf	(divider@Temp+1)
   864  0696  07B9               	addwf	(divider@Temp+1)
   865  0697  0879               	movf	(divider@x),w
   866  0698  01B8               	clrf	(divider@Temp)
   867  0699  07B8               	addwf	(divider@Temp)
   868                           
   869                           	line	63
   870                           	
   871  069A                     l3009:	
   872                           ;PWM USING PWM.c: 63: Dig1 = Temp%10;
   873  069A  300A               	movlw	low(0Ah)
   874  069B  00F0               	movwf	(?___awmod)
   875  069C  3000               	movlw	high(0Ah)
   876  069D  00F1               	movwf	((?___awmod))+1
   877  069E  0839               	movf	(divider@Temp+1),w
   878  069F  01F3               	clrf	1+(?___awmod)+02h
   879  06A0  07F3               	addwf	1+(?___awmod)+02h
   880  06A1  0838               	movf	(divider@Temp),w
   881  06A2  01F2               	clrf	0+(?___awmod)+02h
   882  06A3  07F2               	addwf	0+(?___awmod)+02h
   883                           
   884  06A4  120A  118A  25B8   	fcall	___awmod
              120A  118A         
   885  06A9  0871               	movf	(1+(?___awmod)),w
   886  06AA  1283               	bcf	status, 5	;RP0=0, select bank0
   887  06AB  1303               	bcf	status, 6	;RP1=0, select bank0
   888  06AC  01B1               	clrf	(divider@Dig1+1)
   889  06AD  07B1               	addwf	(divider@Dig1+1)
   890  06AE  0870               	movf	(0+(?___awmod)),w
   891  06AF  01B0               	clrf	(divider@Dig1)
   892  06B0  07B0               	addwf	(divider@Dig1)
   893                           
   894                           	line	64
   895                           	
   896  06B1                     l3011:	
   897                           ;PWM USING PWM.c: 64: Temp = Temp/10;
   898  06B1  300A               	movlw	low(0Ah)
   899  06B2  00F0               	movwf	(?___awdiv)
   900  06B3  3000               	movlw	high(0Ah)
   901  06B4  00F1               	movwf	((?___awdiv))+1
   902  06B5  0839               	movf	(divider@Temp+1),w
   903  06B6  01F3               	clrf	1+(?___awdiv)+02h
   904  06B7  07F3               	addwf	1+(?___awdiv)+02h
   905  06B8  0838               	movf	(divider@Temp),w
   906  06B9  01F2               	clrf	0+(?___awdiv)+02h
   907  06BA  07F2               	addwf	0+(?___awdiv)+02h
   908                           
   909  06BB  120A  118A  261E   	fcall	___awdiv
              120A  118A         
   910  06C0  0871               	movf	(1+(?___awdiv)),w
   911  06C1  1283               	bcf	status, 5	;RP0=0, select bank0
   912  06C2  1303               	bcf	status, 6	;RP1=0, select bank0
   913  06C3  01B9               	clrf	(divider@Temp+1)
   914  06C4  07B9               	addwf	(divider@Temp+1)
   915  06C5  0870               	movf	(0+(?___awdiv)),w
   916  06C6  01B8               	clrf	(divider@Temp)
   917  06C7  07B8               	addwf	(divider@Temp)
   918                           
   919                           	line	65
   920                           	
   921  06C8                     l3013:	
   922                           ;PWM USING PWM.c: 65: Dig2 = Temp%10;
   923  06C8  300A               	movlw	low(0Ah)
   924  06C9  00F0               	movwf	(?___awmod)
   925  06CA  3000               	movlw	high(0Ah)
   926  06CB  00F1               	movwf	((?___awmod))+1
   927  06CC  0839               	movf	(divider@Temp+1),w
   928  06CD  01F3               	clrf	1+(?___awmod)+02h
   929  06CE  07F3               	addwf	1+(?___awmod)+02h
   930  06CF  0838               	movf	(divider@Temp),w
   931  06D0  01F2               	clrf	0+(?___awmod)+02h
   932  06D1  07F2               	addwf	0+(?___awmod)+02h
   933                           
   934  06D2  120A  118A  25B8   	fcall	___awmod
              120A  118A         
   935  06D7  0871               	movf	(1+(?___awmod)),w
   936  06D8  1283               	bcf	status, 5	;RP0=0, select bank0
   937  06D9  1303               	bcf	status, 6	;RP1=0, select bank0
   938  06DA  01B3               	clrf	(divider@Dig2+1)
   939  06DB  07B3               	addwf	(divider@Dig2+1)
   940  06DC  0870               	movf	(0+(?___awmod)),w
   941  06DD  01B2               	clrf	(divider@Dig2)
   942  06DE  07B2               	addwf	(divider@Dig2)
   943                           
   944                           	line	66
   945                           	
   946  06DF                     l3015:	
   947                           ;PWM USING PWM.c: 66: Temp = Temp/10;
   948  06DF  300A               	movlw	low(0Ah)
   949  06E0  00F0               	movwf	(?___awdiv)
   950  06E1  3000               	movlw	high(0Ah)
   951  06E2  00F1               	movwf	((?___awdiv))+1
   952  06E3  0839               	movf	(divider@Temp+1),w
   953  06E4  01F3               	clrf	1+(?___awdiv)+02h
   954  06E5  07F3               	addwf	1+(?___awdiv)+02h
   955  06E6  0838               	movf	(divider@Temp),w
   956  06E7  01F2               	clrf	0+(?___awdiv)+02h
   957  06E8  07F2               	addwf	0+(?___awdiv)+02h
   958                           
   959  06E9  120A  118A  261E   	fcall	___awdiv
              120A  118A         
   960  06EE  0871               	movf	(1+(?___awdiv)),w
   961  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
   962  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
   963  06F1  01B9               	clrf	(divider@Temp+1)
   964  06F2  07B9               	addwf	(divider@Temp+1)
   965  06F3  0870               	movf	(0+(?___awdiv)),w
   966  06F4  01B8               	clrf	(divider@Temp)
   967  06F5  07B8               	addwf	(divider@Temp)
   968                           
   969                           	line	67
   970                           	
   971  06F6                     l3017:	
   972                           ;PWM USING PWM.c: 67: Dig3 = Temp%10;
   973  06F6  300A               	movlw	low(0Ah)
   974  06F7  00F0               	movwf	(?___awmod)
   975  06F8  3000               	movlw	high(0Ah)
   976  06F9  00F1               	movwf	((?___awmod))+1
   977  06FA  0839               	movf	(divider@Temp+1),w
   978  06FB  01F3               	clrf	1+(?___awmod)+02h
   979  06FC  07F3               	addwf	1+(?___awmod)+02h
   980  06FD  0838               	movf	(divider@Temp),w
   981  06FE  01F2               	clrf	0+(?___awmod)+02h
   982  06FF  07F2               	addwf	0+(?___awmod)+02h
   983                           
   984  0700  120A  118A  25B8   	fcall	___awmod
              120A  118A         
   985  0705  0871               	movf	(1+(?___awmod)),w
   986  0706  1283               	bcf	status, 5	;RP0=0, select bank0
   987  0707  1303               	bcf	status, 6	;RP1=0, select bank0
   988  0708  01B5               	clrf	(divider@Dig3+1)
   989  0709  07B5               	addwf	(divider@Dig3+1)
   990  070A  0870               	movf	(0+(?___awmod)),w
   991  070B  01B4               	clrf	(divider@Dig3)
   992  070C  07B4               	addwf	(divider@Dig3)
   993                           
   994                           	line	68
   995                           	
   996  070D                     l3019:	
   997                           ;PWM USING PWM.c: 68: Dig4 = Temp/10;
   998  070D  300A               	movlw	low(0Ah)
   999  070E  00F0               	movwf	(?___awdiv)
  1000  070F  3000               	movlw	high(0Ah)
  1001  0710  00F1               	movwf	((?___awdiv))+1
  1002  0711  0839               	movf	(divider@Temp+1),w
  1003  0712  01F3               	clrf	1+(?___awdiv)+02h
  1004  0713  07F3               	addwf	1+(?___awdiv)+02h
  1005  0714  0838               	movf	(divider@Temp),w
  1006  0715  01F2               	clrf	0+(?___awdiv)+02h
  1007  0716  07F2               	addwf	0+(?___awdiv)+02h
  1008                           
  1009  0717  120A  118A  261E   	fcall	___awdiv
              120A  118A         
  1010  071C  0871               	movf	(1+(?___awdiv)),w
  1011  071D  1283               	bcf	status, 5	;RP0=0, select bank0
  1012  071E  1303               	bcf	status, 6	;RP1=0, select bank0
  1013  071F  01B7               	clrf	(divider@Dig4+1)
  1014  0720  07B7               	addwf	(divider@Dig4+1)
  1015  0721  0870               	movf	(0+(?___awdiv)),w
  1016  0722  01B6               	clrf	(divider@Dig4)
  1017  0723  07B6               	addwf	(divider@Dig4)
  1018                           
  1019                           	line	70
  1020                           	
  1021  0724                     l3021:	
  1022                           ;PWM USING PWM.c: 70: Lcd_Data(Dig4+48);
  1023  0724  0836               	movf	(divider@Dig4),w
  1024  0725  3E30               	addlw	030h
  1025  0726  120A  118A  2589   	fcall	_Lcd_Data
              120A  118A         
  1026                           	line	71
  1027                           	
  1028  072B                     l3023:	
  1029                           ;PWM USING PWM.c: 71: Lcd_Data(Dig3+48);
  1030  072B  1283               	bcf	status, 5	;RP0=0, select bank0
  1031  072C  1303               	bcf	status, 6	;RP1=0, select bank0
  1032  072D  0834               	movf	(divider@Dig3),w
  1033  072E  3E30               	addlw	030h
  1034  072F  120A  118A  2589   	fcall	_Lcd_Data
              120A  118A         
  1035                           	line	72
  1036                           	
  1037  0734                     l3025:	
  1038                           ;PWM USING PWM.c: 72: Lcd_Data(Dig2+48);
  1039  0734  1283               	bcf	status, 5	;RP0=0, select bank0
  1040  0735  1303               	bcf	status, 6	;RP1=0, select bank0
  1041  0736  0832               	movf	(divider@Dig2),w
  1042  0737  3E30               	addlw	030h
  1043  0738  120A  118A  2589   	fcall	_Lcd_Data
              120A  118A         
  1044                           	line	73
  1045                           	
  1046  073D                     l3027:	
  1047                           ;PWM USING PWM.c: 73: Lcd_Data(Dig1+48);
  1048  073D  1283               	bcf	status, 5	;RP0=0, select bank0
  1049  073E  1303               	bcf	status, 6	;RP1=0, select bank0
  1050  073F  0830               	movf	(divider@Dig1),w
  1051  0740  3E30               	addlw	030h
  1052  0741  120A  118A  2589   	fcall	_Lcd_Data
              120A  118A         
  1053                           	line	74
  1054                           	
  1055  0746                     l718:	
  1056  0746  0008               	return
  1057                           	opt stack 0
  1058                           GLOBAL	__end_of_divider
  1059  0747                     	__end_of_divider:
  1060 ;; =============== function _divider ends ============
  1061                           
  1062                           	signat	_divider,4216
  1063                           	global	_Lcd_Intialization
  1064                           psect	text220,local,class=CODE,delta=2
  1065                           global __ptext220
  1066  0526                     __ptext220:
  1067                           
  1068 ;; *************** function _Lcd_Intialization *****************
  1069 ;; Defined at:
  1070 ;;		line 52 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;		None               void
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    1
  1091 ;; This function calls:
  1092 ;;		_Lcd_Command
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           psect	text220
  1098                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1099                           	line	52
  1100                           	global	__size_of_Lcd_Intialization
  1101  0013                     	__size_of_Lcd_Intialization	equ	__end_of_Lcd_Intialization-_Lcd_Intialization
  1102                           	
  1103  0526                     _Lcd_Intialization:	
  1104                           	opt	stack 6
  1105                           ; Regs used in _Lcd_Intialization: [wreg+status,2+status,0+pclath+cstack]
  1106                           	line	53
  1107                           	
  1108  0526                     l3005:	
  1109                           ;PWM USING PWM.c: 53: Lcd_Command(0x02);
  1110  0526  3002               	movlw	(02h)
  1111  0527  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
  1112                           	line	54
  1113                           ;PWM USING PWM.c: 54: Lcd_Command(0x28);
  1114  052C  3028               	movlw	(028h)
  1115  052D  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
  1116                           	line	55
  1117                           ;PWM USING PWM.c: 55: Lcd_Command(0x0c);
  1118  0532  300C               	movlw	(0Ch)
  1119  0533  120A  118A  255A   	fcall	_Lcd_Command
              120A  118A         
  1120                           	line	56
  1121                           	
  1122  0538                     l715:	
  1123  0538  0008               	return
  1124                           	opt stack 0
  1125                           GLOBAL	__end_of_Lcd_Intialization
  1126  0539                     	__end_of_Lcd_Intialization:
  1127 ;; =============== function _Lcd_Intialization ends ============
  1128                           
  1129                           	signat	_Lcd_Intialization,88
  1130                           	global	_Lcd_String
  1131                           psect	text221,local,class=CODE,delta=2
  1132                           global __ptext221
  1133  0539                     __ptext221:
  1134                           
  1135 ;; *************** function _Lcd_String *****************
  1136 ;; Defined at:
  1137 ;;		line 44 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  Str             1    wreg     PTR const unsigned char 
  1140 ;;		 -> STR_2(11), STR_1(9), 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  Str             1    4[COMMON] PTR const unsigned char 
  1143 ;;		 -> STR_2(11), STR_1(9), 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;		None               void
  1146 ;; Registers used:
  1147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0
  1155 ;;      Temps:          1       0       0       0       0
  1156 ;;      Totals:         2       0       0       0       0
  1157 ;;Total ram usage:        2 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    1
  1160 ;; This function calls:
  1161 ;;		_Lcd_Data
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           psect	text221
  1167                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1168                           	line	44
  1169                           	global	__size_of_Lcd_String
  1170  0021                     	__size_of_Lcd_String	equ	__end_of_Lcd_String-_Lcd_String
  1171                           	
  1172  0539                     _Lcd_String:	
  1173                           	opt	stack 6
  1174                           ; Regs used in _Lcd_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1175                           ;Lcd_String@Str stored from wreg
  1176  0539  00F4               	movwf	(Lcd_String@Str)
  1177                           	line	45
  1178                           	
  1179  053A                     l2997:	
  1180                           ;PWM USING PWM.c: 45: while(*Str != 0)
  1181  053A  2D4C               	goto	l3003
  1182                           	
  1183  053B                     l710:	
  1184                           	line	47
  1185                           	
  1186  053B                     l2999:	
  1187                           ;PWM USING PWM.c: 46: {
  1188                           ;PWM USING PWM.c: 47: Lcd_Data(*Str++);
  1189  053B  0874               	movf	(Lcd_String@Str),w
  1190  053C  0084               	movwf	fsr0
  1191  053D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1192  0542  120A  118A  2589   	fcall	_Lcd_Data
              120A  118A         
  1193                           	
  1194  0547                     l3001:	
  1195  0547  3001               	movlw	(01h)
  1196  0548  00F3               	movwf	(??_Lcd_String+0)+0
  1197  0549  0873               	movf	(??_Lcd_String+0)+0,w
  1198  054A  07F4               	addwf	(Lcd_String@Str),f
  1199  054B  2D4C               	goto	l3003
  1200                           	line	48
  1201                           	
  1202  054C                     l709:	
  1203                           	line	45
  1204                           	
  1205  054C                     l3003:	
  1206  054C  0874               	movf	(Lcd_String@Str),w
  1207  054D  0084               	movwf	fsr0
  1208  054E  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1209  0553  3800               	iorlw	0
  1210  0554  1D03               	skipz
  1211  0555  2D57               	goto	u2471
  1212  0556  2D58               	goto	u2470
  1213  0557                     u2471:
  1214  0557  2D3B               	goto	l2999
  1215  0558                     u2470:
  1216  0558  2D59               	goto	l712
  1217                           	
  1218  0559                     l711:	
  1219                           	line	49
  1220                           	
  1221  0559                     l712:	
  1222  0559  0008               	return
  1223                           	opt stack 0
  1224                           GLOBAL	__end_of_Lcd_String
  1225  055A                     	__end_of_Lcd_String:
  1226 ;; =============== function _Lcd_String ends ============
  1227                           
  1228                           	signat	_Lcd_String,4216
  1229                           	global	_Lcd_Data
  1230                           psect	text222,local,class=CODE,delta=2
  1231                           global __ptext222
  1232  0589                     __ptext222:
  1233                           
  1234 ;; *************** function _Lcd_Data *****************
  1235 ;; Defined at:
  1236 ;;		line 29 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  Data            1    wreg     const unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  Data            1    2[COMMON] const unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;		None               void
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0
  1252 ;;      Temps:          2       0       0       0       0
  1253 ;;      Totals:         3       0       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_Lcd_String
  1260 ;;		_divider
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           psect	text222
  1264                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1265                           	line	29
  1266                           	global	__size_of_Lcd_Data
  1267  002F                     	__size_of_Lcd_Data	equ	__end_of_Lcd_Data-_Lcd_Data
  1268                           	
  1269  0589                     _Lcd_Data:	
  1270                           	opt	stack 6
  1271                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0]
  1272                           ;Lcd_Data@Data stored from wreg
  1273  0589  00F2               	movwf	(Lcd_Data@Data)
  1274                           	line	30
  1275                           	
  1276  058A                     l2977:	
  1277                           ;PWM USING PWM.c: 30: PORTD = (Data & 0XF0);
  1278  058A  0872               	movf	(Lcd_Data@Data),w
  1279  058B  39F0               	andlw	0F0h
  1280  058C  1283               	bcf	status, 5	;RP0=0, select bank0
  1281  058D  1303               	bcf	status, 6	;RP1=0, select bank0
  1282  058E  0088               	movwf	(8)	;volatile
  1283                           	line	31
  1284                           	
  1285  058F                     l2979:	
  1286                           ;PWM USING PWM.c: 31: RD2 = 1;
  1287  058F  1508               	bsf	(66/8),(66)&7
  1288                           	line	32
  1289                           	
  1290  0590                     l2981:	
  1291                           ;PWM USING PWM.c: 32: RD3 = 1;
  1292  0590  1588               	bsf	(67/8),(67)&7
  1293                           	line	33
  1294                           	
  1295  0591                     l2983:	
  1296                           ;PWM USING PWM.c: 33: _delay((unsigned long)((5)*(20e6/4000.0)));
  1297                           	opt asmopt_off
  1298  0591  3021               movlw	33
  1299  0592  00F1               movwf	((??_Lcd_Data+0)+0+1),f
  1300  0593  3076               	movlw	118
  1301  0594  00F0               movwf	((??_Lcd_Data+0)+0),f
  1302  0595                     u2527:
  1303  0595  0BF0               	decfsz	((??_Lcd_Data+0)+0),f
  1304  0596  2D95               	goto	u2527
  1305  0597  0BF1               	decfsz	((??_Lcd_Data+0)+0+1),f
  1306  0598  2D95               	goto	u2527
  1307  0599  0064               	clrwdt
  1308                           opt asmopt_on
  1309                           
  1310                           	line	34
  1311                           	
  1312  059A                     l2985:	
  1313                           ;PWM USING PWM.c: 34: RD3 = 0;
  1314  059A  1283               	bcf	status, 5	;RP0=0, select bank0
  1315  059B  1303               	bcf	status, 6	;RP1=0, select bank0
  1316  059C  1188               	bcf	(67/8),(67)&7
  1317                           	line	36
  1318                           	
  1319  059D                     l2987:	
  1320                           ;PWM USING PWM.c: 36: PORTD = ((Data<<4) & 0xF0);
  1321  059D  0872               	movf	(Lcd_Data@Data),w
  1322  059E  00F0               	movwf	(??_Lcd_Data+0)+0
  1323  059F  3003               	movlw	(04h)-1
  1324  05A0                     u2465:
  1325  05A0  1003               	clrc
  1326  05A1  0DF0               	rlf	(??_Lcd_Data+0)+0,f
  1327  05A2  3EFF               	addlw	-1
  1328  05A3  1D03               	skipz
  1329  05A4  2DA0               	goto	u2465
  1330  05A5  1003               	clrc
  1331  05A6  0D70               	rlf	(??_Lcd_Data+0)+0,w
  1332  05A7  39F0               	andlw	0F0h
  1333  05A8  0088               	movwf	(8)	;volatile
  1334                           	line	37
  1335                           	
  1336  05A9                     l2989:	
  1337                           ;PWM USING PWM.c: 37: RD2 = 1;
  1338  05A9  1508               	bsf	(66/8),(66)&7
  1339                           	line	38
  1340                           	
  1341  05AA                     l2991:	
  1342                           ;PWM USING PWM.c: 38: RD3 = 1;
  1343  05AA  1588               	bsf	(67/8),(67)&7
  1344                           	line	39
  1345                           	
  1346  05AB                     l2993:	
  1347                           ;PWM USING PWM.c: 39: _delay((unsigned long)((5)*(20e6/4000.0)));
  1348                           	opt asmopt_off
  1349  05AB  3021               movlw	33
  1350  05AC  00F1               movwf	((??_Lcd_Data+0)+0+1),f
  1351  05AD  3076               	movlw	118
  1352  05AE  00F0               movwf	((??_Lcd_Data+0)+0),f
  1353  05AF                     u2537:
  1354  05AF  0BF0               	decfsz	((??_Lcd_Data+0)+0),f
  1355  05B0  2DAF               	goto	u2537
  1356  05B1  0BF1               	decfsz	((??_Lcd_Data+0)+0+1),f
  1357  05B2  2DAF               	goto	u2537
  1358  05B3  0064               	clrwdt
  1359                           opt asmopt_on
  1360                           
  1361                           	line	40
  1362                           	
  1363  05B4                     l2995:	
  1364                           ;PWM USING PWM.c: 40: RD3 = 0;
  1365  05B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1366  05B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1367  05B6  1188               	bcf	(67/8),(67)&7
  1368                           	line	41
  1369                           	
  1370  05B7                     l706:	
  1371  05B7  0008               	return
  1372                           	opt stack 0
  1373                           GLOBAL	__end_of_Lcd_Data
  1374  05B8                     	__end_of_Lcd_Data:
  1375 ;; =============== function _Lcd_Data ends ============
  1376                           
  1377                           	signat	_Lcd_Data,4216
  1378                           	global	_Lcd_Command
  1379                           psect	text223,local,class=CODE,delta=2
  1380                           global __ptext223
  1381  055A                     __ptext223:
  1382                           
  1383 ;; *************** function _Lcd_Command *****************
  1384 ;; Defined at:
  1385 ;;		line 14 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  cmd             1    wreg     const unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  cmd             1    2[COMMON] const unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         1       0       0       0       0
  1401 ;;      Temps:          2       0       0       0       0
  1402 ;;      Totals:         3       0       0       0       0
  1403 ;;Total ram usage:        3 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_Lcd_Intialization
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           psect	text223
  1413                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  1414                           	line	14
  1415                           	global	__size_of_Lcd_Command
  1416  002F                     	__size_of_Lcd_Command	equ	__end_of_Lcd_Command-_Lcd_Command
  1417                           	
  1418  055A                     _Lcd_Command:	
  1419                           	opt	stack 7
  1420                           ; Regs used in _Lcd_Command: [wreg+status,2+status,0]
  1421                           ;Lcd_Command@cmd stored from wreg
  1422  055A  00F2               	movwf	(Lcd_Command@cmd)
  1423                           	line	15
  1424                           	
  1425  055B                     l2957:	
  1426                           ;PWM USING PWM.c: 15: PORTD = (cmd & 0XF0);
  1427  055B  0872               	movf	(Lcd_Command@cmd),w
  1428  055C  39F0               	andlw	0F0h
  1429  055D  1283               	bcf	status, 5	;RP0=0, select bank0
  1430  055E  1303               	bcf	status, 6	;RP1=0, select bank0
  1431  055F  0088               	movwf	(8)	;volatile
  1432                           	line	16
  1433                           	
  1434  0560                     l2959:	
  1435                           ;PWM USING PWM.c: 16: RD2 = 0;
  1436  0560  1108               	bcf	(66/8),(66)&7
  1437                           	line	17
  1438                           	
  1439  0561                     l2961:	
  1440                           ;PWM USING PWM.c: 17: RD3 = 1;
  1441  0561  1588               	bsf	(67/8),(67)&7
  1442                           	line	18
  1443                           	
  1444  0562                     l2963:	
  1445                           ;PWM USING PWM.c: 18: _delay((unsigned long)((5)*(20e6/4000.0)));
  1446                           	opt asmopt_off
  1447  0562  3021               movlw	33
  1448  0563  00F1               movwf	((??_Lcd_Command+0)+0+1),f
  1449  0564  3076               	movlw	118
  1450  0565  00F0               movwf	((??_Lcd_Command+0)+0),f
  1451  0566                     u2547:
  1452  0566  0BF0               	decfsz	((??_Lcd_Command+0)+0),f
  1453  0567  2D66               	goto	u2547
  1454  0568  0BF1               	decfsz	((??_Lcd_Command+0)+0+1),f
  1455  0569  2D66               	goto	u2547
  1456  056A  0064               	clrwdt
  1457                           opt asmopt_on
  1458                           
  1459                           	line	19
  1460                           	
  1461  056B                     l2965:	
  1462                           ;PWM USING PWM.c: 19: RD3 = 0;
  1463  056B  1283               	bcf	status, 5	;RP0=0, select bank0
  1464  056C  1303               	bcf	status, 6	;RP1=0, select bank0
  1465  056D  1188               	bcf	(67/8),(67)&7
  1466                           	line	21
  1467                           	
  1468  056E                     l2967:	
  1469                           ;PWM USING PWM.c: 21: PORTD = ((cmd<<4) & 0xF0);
  1470  056E  0872               	movf	(Lcd_Command@cmd),w
  1471  056F  00F0               	movwf	(??_Lcd_Command+0)+0
  1472  0570  3003               	movlw	(04h)-1
  1473  0571                     u2455:
  1474  0571  1003               	clrc
  1475  0572  0DF0               	rlf	(??_Lcd_Command+0)+0,f
  1476  0573  3EFF               	addlw	-1
  1477  0574  1D03               	skipz
  1478  0575  2D71               	goto	u2455
  1479  0576  1003               	clrc
  1480  0577  0D70               	rlf	(??_Lcd_Command+0)+0,w
  1481  0578  39F0               	andlw	0F0h
  1482  0579  0088               	movwf	(8)	;volatile
  1483                           	line	22
  1484                           	
  1485  057A                     l2969:	
  1486                           ;PWM USING PWM.c: 22: RD2 = 0;
  1487  057A  1108               	bcf	(66/8),(66)&7
  1488                           	line	23
  1489                           	
  1490  057B                     l2971:	
  1491                           ;PWM USING PWM.c: 23: RD3 = 1;
  1492  057B  1588               	bsf	(67/8),(67)&7
  1493                           	line	24
  1494                           	
  1495  057C                     l2973:	
  1496                           ;PWM USING PWM.c: 24: _delay((unsigned long)((5)*(20e6/4000.0)));
  1497                           	opt asmopt_off
  1498  057C  3021               movlw	33
  1499  057D  00F1               movwf	((??_Lcd_Command+0)+0+1),f
  1500  057E  3076               	movlw	118
  1501  057F  00F0               movwf	((??_Lcd_Command+0)+0),f
  1502  0580                     u2557:
  1503  0580  0BF0               	decfsz	((??_Lcd_Command+0)+0),f
  1504  0581  2D80               	goto	u2557
  1505  0582  0BF1               	decfsz	((??_Lcd_Command+0)+0+1),f
  1506  0583  2D80               	goto	u2557
  1507  0584  0064               	clrwdt
  1508                           opt asmopt_on
  1509                           
  1510                           	line	25
  1511                           	
  1512  0585                     l2975:	
  1513                           ;PWM USING PWM.c: 25: RD3 = 0;
  1514  0585  1283               	bcf	status, 5	;RP0=0, select bank0
  1515  0586  1303               	bcf	status, 6	;RP1=0, select bank0
  1516  0587  1188               	bcf	(67/8),(67)&7
  1517                           	line	26
  1518                           	
  1519  0588                     l703:	
  1520  0588  0008               	return
  1521                           	opt stack 0
  1522                           GLOBAL	__end_of_Lcd_Command
  1523  0589                     	__end_of_Lcd_Command:
  1524 ;; =============== function _Lcd_Command ends ============
  1525                           
  1526                           	signat	_Lcd_Command,4216
  1527                           	global	___awmod
  1528                           psect	text224,local,class=CODE,delta=2
  1529                           global __ptext224
  1530  05B8                     __ptext224:
  1531                           
  1532 ;; *************** function ___awmod *****************
  1533 ;; Defined at:
  1534 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  divisor         2    0[COMMON] int 
  1537 ;;  dividend        2    2[COMMON] int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  sign            1    6[COMMON] unsigned char 
  1540 ;;  counter         1    5[COMMON] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  2    0[COMMON] int 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         4       0       0       0       0
  1551 ;;      Locals:         2       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0
  1553 ;;      Totals:         7       0       0       0       0
  1554 ;;Total ram usage:        7 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_divider
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           psect	text224
  1563                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awmod.c"
  1564                           	line	5
  1565                           	global	__size_of___awmod
  1566  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  1567                           	
  1568  05B8                     ___awmod:	
  1569                           	opt	stack 6
  1570                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1571                           	line	8
  1572                           	
  1573  05B8                     l2923:	
  1574  05B8  01F6               	clrf	(___awmod@sign)
  1575                           	line	9
  1576  05B9  1FF3               	btfss	(___awmod@dividend+1),7
  1577  05BA  2DBC               	goto	u2361
  1578  05BB  2DBD               	goto	u2360
  1579  05BC                     u2361:
  1580  05BC  2DC6               	goto	l2927
  1581  05BD                     u2360:
  1582                           	line	10
  1583                           	
  1584  05BD                     l2925:	
  1585  05BD  09F2               	comf	(___awmod@dividend),f
  1586  05BE  09F3               	comf	(___awmod@dividend+1),f
  1587  05BF  0AF2               	incf	(___awmod@dividend),f
  1588  05C0  1903               	skipnz
  1589  05C1  0AF3               	incf	(___awmod@dividend+1),f
  1590                           	line	11
  1591  05C2  01F6               	clrf	(___awmod@sign)
  1592  05C3  1403               	bsf	status,0
  1593  05C4  0DF6               	rlf	(___awmod@sign),f
  1594  05C5  2DC6               	goto	l2927
  1595                           	line	12
  1596                           	
  1597  05C6                     l1621:	
  1598                           	line	13
  1599                           	
  1600  05C6                     l2927:	
  1601  05C6  1FF1               	btfss	(___awmod@divisor+1),7
  1602  05C7  2DC9               	goto	u2371
  1603  05C8  2DCA               	goto	u2370
  1604  05C9                     u2371:
  1605  05C9  2DD0               	goto	l2931
  1606  05CA                     u2370:
  1607                           	line	14
  1608                           	
  1609  05CA                     l2929:	
  1610  05CA  09F0               	comf	(___awmod@divisor),f
  1611  05CB  09F1               	comf	(___awmod@divisor+1),f
  1612  05CC  0AF0               	incf	(___awmod@divisor),f
  1613  05CD  1903               	skipnz
  1614  05CE  0AF1               	incf	(___awmod@divisor+1),f
  1615  05CF  2DD0               	goto	l2931
  1616                           	
  1617  05D0                     l1622:	
  1618                           	line	15
  1619                           	
  1620  05D0                     l2931:	
  1621  05D0  0871               	movf	(___awmod@divisor+1),w
  1622  05D1  0470               	iorwf	(___awmod@divisor),w
  1623  05D2  1903               	skipnz
  1624  05D3  2DD5               	goto	u2381
  1625  05D4  2DD6               	goto	u2380
  1626  05D5                     u2381:
  1627  05D5  2E0C               	goto	l2949
  1628  05D6                     u2380:
  1629                           	line	16
  1630                           	
  1631  05D6                     l2933:	
  1632  05D6  01F5               	clrf	(___awmod@counter)
  1633  05D7  1403               	bsf	status,0
  1634  05D8  0DF5               	rlf	(___awmod@counter),f
  1635                           	line	17
  1636  05D9  2DE6               	goto	l2939
  1637                           	
  1638  05DA                     l1625:	
  1639                           	line	18
  1640                           	
  1641  05DA                     l2935:	
  1642  05DA  3001               	movlw	01h
  1643                           	
  1644  05DB                     u2395:
  1645  05DB  1003               	clrc
  1646  05DC  0DF0               	rlf	(___awmod@divisor),f
  1647  05DD  0DF1               	rlf	(___awmod@divisor+1),f
  1648  05DE  3EFF               	addlw	-1
  1649  05DF  1D03               	skipz
  1650  05E0  2DDB               	goto	u2395
  1651                           	line	19
  1652                           	
  1653  05E1                     l2937:	
  1654  05E1  3001               	movlw	(01h)
  1655  05E2  00F4               	movwf	(??___awmod+0)+0
  1656  05E3  0874               	movf	(??___awmod+0)+0,w
  1657  05E4  07F5               	addwf	(___awmod@counter),f
  1658  05E5  2DE6               	goto	l2939
  1659                           	line	20
  1660                           	
  1661  05E6                     l1624:	
  1662                           	line	17
  1663                           	
  1664  05E6                     l2939:	
  1665  05E6  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  1666  05E7  2DE9               	goto	u2401
  1667  05E8  2DEA               	goto	u2400
  1668  05E9                     u2401:
  1669  05E9  2DDA               	goto	l2935
  1670  05EA                     u2400:
  1671  05EA  2DEC               	goto	l2941
  1672                           	
  1673  05EB                     l1626:	
  1674  05EB  2DEC               	goto	l2941
  1675                           	line	21
  1676                           	
  1677  05EC                     l1627:	
  1678                           	line	22
  1679                           	
  1680  05EC                     l2941:	
  1681  05EC  0871               	movf	(___awmod@divisor+1),w
  1682  05ED  0273               	subwf	(___awmod@dividend+1),w
  1683  05EE  1D03               	skipz
  1684  05EF  2DF2               	goto	u2415
  1685  05F0  0870               	movf	(___awmod@divisor),w
  1686  05F1  0272               	subwf	(___awmod@dividend),w
  1687  05F2                     u2415:
  1688  05F2  1C03               	skipc
  1689  05F3  2DF5               	goto	u2411
  1690  05F4  2DF6               	goto	u2410
  1691  05F5                     u2411:
  1692  05F5  2DFD               	goto	l2945
  1693  05F6                     u2410:
  1694                           	line	23
  1695                           	
  1696  05F6                     l2943:	
  1697  05F6  0870               	movf	(___awmod@divisor),w
  1698  05F7  02F2               	subwf	(___awmod@dividend),f
  1699  05F8  0871               	movf	(___awmod@divisor+1),w
  1700  05F9  1C03               	skipc
  1701  05FA  03F3               	decf	(___awmod@dividend+1),f
  1702  05FB  02F3               	subwf	(___awmod@dividend+1),f
  1703  05FC  2DFD               	goto	l2945
  1704                           	
  1705  05FD                     l1628:	
  1706                           	line	24
  1707                           	
  1708  05FD                     l2945:	
  1709  05FD  3001               	movlw	01h
  1710                           	
  1711  05FE                     u2425:
  1712  05FE  1003               	clrc
  1713  05FF  0CF1               	rrf	(___awmod@divisor+1),f
  1714  0600  0CF0               	rrf	(___awmod@divisor),f
  1715  0601  3EFF               	addlw	-1
  1716  0602  1D03               	skipz
  1717  0603  2DFE               	goto	u2425
  1718                           	line	25
  1719                           	
  1720  0604                     l2947:	
  1721  0604  3001               	movlw	low(01h)
  1722  0605  02F5               	subwf	(___awmod@counter),f
  1723  0606  1D03               	btfss	status,2
  1724  0607  2E09               	goto	u2431
  1725  0608  2E0A               	goto	u2430
  1726  0609                     u2431:
  1727  0609  2DEC               	goto	l2941
  1728  060A                     u2430:
  1729  060A  2E0C               	goto	l2949
  1730                           	
  1731  060B                     l1629:	
  1732  060B  2E0C               	goto	l2949
  1733                           	line	26
  1734                           	
  1735  060C                     l1623:	
  1736                           	line	27
  1737                           	
  1738  060C                     l2949:	
  1739  060C  0876               	movf	(___awmod@sign),w
  1740  060D  1D03               	skipz
  1741  060E  2E10               	goto	u2440
  1742  060F  2E16               	goto	l2953
  1743  0610                     u2440:
  1744                           	line	28
  1745                           	
  1746  0610                     l2951:	
  1747  0610  09F2               	comf	(___awmod@dividend),f
  1748  0611  09F3               	comf	(___awmod@dividend+1),f
  1749  0612  0AF2               	incf	(___awmod@dividend),f
  1750  0613  1903               	skipnz
  1751  0614  0AF3               	incf	(___awmod@dividend+1),f
  1752  0615  2E16               	goto	l2953
  1753                           	
  1754  0616                     l1630:	
  1755                           	line	29
  1756                           	
  1757  0616                     l2953:	
  1758  0616  0873               	movf	(___awmod@dividend+1),w
  1759  0617  01F1               	clrf	(?___awmod+1)
  1760  0618  07F1               	addwf	(?___awmod+1)
  1761  0619  0872               	movf	(___awmod@dividend),w
  1762  061A  01F0               	clrf	(?___awmod)
  1763  061B  07F0               	addwf	(?___awmod)
  1764                           
  1765  061C  2E1D               	goto	l1631
  1766                           	
  1767  061D                     l2955:	
  1768                           	line	30
  1769                           	
  1770  061D                     l1631:	
  1771  061D  0008               	return
  1772                           	opt stack 0
  1773                           GLOBAL	__end_of___awmod
  1774  061E                     	__end_of___awmod:
  1775 ;; =============== function ___awmod ends ============
  1776                           
  1777                           	signat	___awmod,8314
  1778                           	global	___awdiv
  1779                           psect	text225,local,class=CODE,delta=2
  1780                           global __ptext225
  1781  061E                     __ptext225:
  1782                           
  1783 ;; *************** function ___awdiv *****************
  1784 ;; Defined at:
  1785 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  divisor         2    0[COMMON] int 
  1788 ;;  dividend        2    2[COMMON] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  quotient        2    7[COMMON] int 
  1791 ;;  sign            1    6[COMMON] unsigned char 
  1792 ;;  counter         1    5[COMMON] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  2    0[COMMON] int 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         4       0       0       0       0
  1803 ;;      Locals:         4       0       0       0       0
  1804 ;;      Temps:          1       0       0       0       0
  1805 ;;      Totals:         9       0       0       0       0
  1806 ;;Total ram usage:        9 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_divider
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           psect	text225
  1816                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  1817                           	line	5
  1818                           	global	__size_of___awdiv
  1819  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1820                           	
  1821  061E                     ___awdiv:	
  1822                           	opt	stack 6
  1823                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1824                           	line	9
  1825                           	
  1826  061E                     l2883:	
  1827  061E  01F6               	clrf	(___awdiv@sign)
  1828                           	line	10
  1829  061F  1FF1               	btfss	(___awdiv@divisor+1),7
  1830  0620  2E22               	goto	u2261
  1831  0621  2E23               	goto	u2260
  1832  0622                     u2261:
  1833  0622  2E2C               	goto	l2887
  1834  0623                     u2260:
  1835                           	line	11
  1836                           	
  1837  0623                     l2885:	
  1838  0623  09F0               	comf	(___awdiv@divisor),f
  1839  0624  09F1               	comf	(___awdiv@divisor+1),f
  1840  0625  0AF0               	incf	(___awdiv@divisor),f
  1841  0626  1903               	skipnz
  1842  0627  0AF1               	incf	(___awdiv@divisor+1),f
  1843                           	line	12
  1844  0628  01F6               	clrf	(___awdiv@sign)
  1845  0629  1403               	bsf	status,0
  1846  062A  0DF6               	rlf	(___awdiv@sign),f
  1847  062B  2E2C               	goto	l2887
  1848                           	line	13
  1849                           	
  1850  062C                     l1553:	
  1851                           	line	14
  1852                           	
  1853  062C                     l2887:	
  1854  062C  1FF3               	btfss	(___awdiv@dividend+1),7
  1855  062D  2E2F               	goto	u2271
  1856  062E  2E30               	goto	u2270
  1857  062F                     u2271:
  1858  062F  2E3A               	goto	l2893
  1859  0630                     u2270:
  1860                           	line	15
  1861                           	
  1862  0630                     l2889:	
  1863  0630  09F2               	comf	(___awdiv@dividend),f
  1864  0631  09F3               	comf	(___awdiv@dividend+1),f
  1865  0632  0AF2               	incf	(___awdiv@dividend),f
  1866  0633  1903               	skipnz
  1867  0634  0AF3               	incf	(___awdiv@dividend+1),f
  1868                           	line	16
  1869                           	
  1870  0635                     l2891:	
  1871  0635  3001               	movlw	(01h)
  1872  0636  00F4               	movwf	(??___awdiv+0)+0
  1873  0637  0874               	movf	(??___awdiv+0)+0,w
  1874  0638  06F6               	xorwf	(___awdiv@sign),f
  1875  0639  2E3A               	goto	l2893
  1876                           	line	17
  1877                           	
  1878  063A                     l1554:	
  1879                           	line	18
  1880                           	
  1881  063A                     l2893:	
  1882  063A  01F7               	clrf	(___awdiv@quotient)
  1883  063B  01F8               	clrf	(___awdiv@quotient+1)
  1884                           	line	19
  1885                           	
  1886  063C                     l2895:	
  1887  063C  0871               	movf	(___awdiv@divisor+1),w
  1888  063D  0470               	iorwf	(___awdiv@divisor),w
  1889  063E  1903               	skipnz
  1890  063F  2E41               	goto	u2281
  1891  0640  2E42               	goto	u2280
  1892  0641                     u2281:
  1893  0641  2E80               	goto	l2915
  1894  0642                     u2280:
  1895                           	line	20
  1896                           	
  1897  0642                     l2897:	
  1898  0642  01F5               	clrf	(___awdiv@counter)
  1899  0643  1403               	bsf	status,0
  1900  0644  0DF5               	rlf	(___awdiv@counter),f
  1901                           	line	21
  1902  0645  2E52               	goto	l2903
  1903                           	
  1904  0646                     l1557:	
  1905                           	line	22
  1906                           	
  1907  0646                     l2899:	
  1908  0646  3001               	movlw	01h
  1909                           	
  1910  0647                     u2295:
  1911  0647  1003               	clrc
  1912  0648  0DF0               	rlf	(___awdiv@divisor),f
  1913  0649  0DF1               	rlf	(___awdiv@divisor+1),f
  1914  064A  3EFF               	addlw	-1
  1915  064B  1D03               	skipz
  1916  064C  2E47               	goto	u2295
  1917                           	line	23
  1918                           	
  1919  064D                     l2901:	
  1920  064D  3001               	movlw	(01h)
  1921  064E  00F4               	movwf	(??___awdiv+0)+0
  1922  064F  0874               	movf	(??___awdiv+0)+0,w
  1923  0650  07F5               	addwf	(___awdiv@counter),f
  1924  0651  2E52               	goto	l2903
  1925                           	line	24
  1926                           	
  1927  0652                     l1556:	
  1928                           	line	21
  1929                           	
  1930  0652                     l2903:	
  1931  0652  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  1932  0653  2E55               	goto	u2301
  1933  0654  2E56               	goto	u2300
  1934  0655                     u2301:
  1935  0655  2E46               	goto	l2899
  1936  0656                     u2300:
  1937  0656  2E58               	goto	l2905
  1938                           	
  1939  0657                     l1558:	
  1940  0657  2E58               	goto	l2905
  1941                           	line	25
  1942                           	
  1943  0658                     l1559:	
  1944                           	line	26
  1945                           	
  1946  0658                     l2905:	
  1947  0658  3001               	movlw	01h
  1948                           	
  1949  0659                     u2315:
  1950  0659  1003               	clrc
  1951  065A  0DF7               	rlf	(___awdiv@quotient),f
  1952  065B  0DF8               	rlf	(___awdiv@quotient+1),f
  1953  065C  3EFF               	addlw	-1
  1954  065D  1D03               	skipz
  1955  065E  2E59               	goto	u2315
  1956                           	line	27
  1957  065F  0871               	movf	(___awdiv@divisor+1),w
  1958  0660  0273               	subwf	(___awdiv@dividend+1),w
  1959  0661  1D03               	skipz
  1960  0662  2E65               	goto	u2325
  1961  0663  0870               	movf	(___awdiv@divisor),w
  1962  0664  0272               	subwf	(___awdiv@dividend),w
  1963  0665                     u2325:
  1964  0665  1C03               	skipc
  1965  0666  2E68               	goto	u2321
  1966  0667  2E69               	goto	u2320
  1967  0668                     u2321:
  1968  0668  2E71               	goto	l2911
  1969  0669                     u2320:
  1970                           	line	28
  1971                           	
  1972  0669                     l2907:	
  1973  0669  0870               	movf	(___awdiv@divisor),w
  1974  066A  02F2               	subwf	(___awdiv@dividend),f
  1975  066B  0871               	movf	(___awdiv@divisor+1),w
  1976  066C  1C03               	skipc
  1977  066D  03F3               	decf	(___awdiv@dividend+1),f
  1978  066E  02F3               	subwf	(___awdiv@dividend+1),f
  1979                           	line	29
  1980                           	
  1981  066F                     l2909:	
  1982  066F  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1983  0670  2E71               	goto	l2911
  1984                           	line	30
  1985                           	
  1986  0671                     l1560:	
  1987                           	line	31
  1988                           	
  1989  0671                     l2911:	
  1990  0671  3001               	movlw	01h
  1991                           	
  1992  0672                     u2335:
  1993  0672  1003               	clrc
  1994  0673  0CF1               	rrf	(___awdiv@divisor+1),f
  1995  0674  0CF0               	rrf	(___awdiv@divisor),f
  1996  0675  3EFF               	addlw	-1
  1997  0676  1D03               	skipz
  1998  0677  2E72               	goto	u2335
  1999                           	line	32
  2000                           	
  2001  0678                     l2913:	
  2002  0678  3001               	movlw	low(01h)
  2003  0679  02F5               	subwf	(___awdiv@counter),f
  2004  067A  1D03               	btfss	status,2
  2005  067B  2E7D               	goto	u2341
  2006  067C  2E7E               	goto	u2340
  2007  067D                     u2341:
  2008  067D  2E58               	goto	l2905
  2009  067E                     u2340:
  2010  067E  2E80               	goto	l2915
  2011                           	
  2012  067F                     l1561:	
  2013  067F  2E80               	goto	l2915
  2014                           	line	33
  2015                           	
  2016  0680                     l1555:	
  2017                           	line	34
  2018                           	
  2019  0680                     l2915:	
  2020  0680  0876               	movf	(___awdiv@sign),w
  2021  0681  1D03               	skipz
  2022  0682  2E84               	goto	u2350
  2023  0683  2E8A               	goto	l2919
  2024  0684                     u2350:
  2025                           	line	35
  2026                           	
  2027  0684                     l2917:	
  2028  0684  09F7               	comf	(___awdiv@quotient),f
  2029  0685  09F8               	comf	(___awdiv@quotient+1),f
  2030  0686  0AF7               	incf	(___awdiv@quotient),f
  2031  0687  1903               	skipnz
  2032  0688  0AF8               	incf	(___awdiv@quotient+1),f
  2033  0689  2E8A               	goto	l2919
  2034                           	
  2035  068A                     l1562:	
  2036                           	line	36
  2037                           	
  2038  068A                     l2919:	
  2039  068A  0878               	movf	(___awdiv@quotient+1),w
  2040  068B  01F1               	clrf	(?___awdiv+1)
  2041  068C  07F1               	addwf	(?___awdiv+1)
  2042  068D  0877               	movf	(___awdiv@quotient),w
  2043  068E  01F0               	clrf	(?___awdiv)
  2044  068F  07F0               	addwf	(?___awdiv)
  2045                           
  2046  0690  2E91               	goto	l1563
  2047                           	
  2048  0691                     l2921:	
  2049                           	line	37
  2050                           	
  2051  0691                     l1563:	
  2052  0691  0008               	return
  2053                           	opt stack 0
  2054                           GLOBAL	__end_of___awdiv
  2055  0692                     	__end_of___awdiv:
  2056 ;; =============== function ___awdiv ends ============
  2057                           
  2058                           	signat	___awdiv,8314
  2059                           	global	_pluse
  2060                           psect	text226,local,class=CODE,delta=2
  2061                           global __ptext226
  2062  050E                     __ptext226:
  2063                           
  2064 ;; *************** function _pluse *****************
  2065 ;; Defined at:
  2066 ;;		line 77 in file "E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  x               2    0[COMMON] int 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  Temp            2    2[COMMON] int 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;		None               void
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2080 ;;      Params:         2       0       0       0       0
  2081 ;;      Locals:         2       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0
  2083 ;;      Totals:         4       0       0       0       0
  2084 ;;Total ram usage:        4 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           psect	text226
  2093                           	file	"E:\02-CODING\05-LYCASOFT CODING\02-CODING\23-PWM USING POT\CODE\PWM USING PWM.c"
  2094                           	line	77
  2095                           	global	__size_of_pluse
  2096  000B                     	__size_of_pluse	equ	__end_of_pluse-_pluse
  2097                           	
  2098  050E                     _pluse:	
  2099                           	opt	stack 7
  2100                           ; Regs used in _pluse: [wreg+status,2+status,0]
  2101                           	line	79
  2102                           	
  2103  050E                     l2879:	
  2104                           ;PWM USING PWM.c: 78: int Temp;
  2105                           ;PWM USING PWM.c: 79: Temp=x;
  2106  050E  0871               	movf	(pluse@x+1),w
  2107  050F  01F3               	clrf	(pluse@Temp+1)
  2108  0510  07F3               	addwf	(pluse@Temp+1)
  2109  0511  0870               	movf	(pluse@x),w
  2110  0512  01F2               	clrf	(pluse@Temp)
  2111  0513  07F2               	addwf	(pluse@Temp)
  2112                           
  2113                           	line	80
  2114                           	
  2115  0514                     l2881:	
  2116                           ;PWM USING PWM.c: 80: CCPR1L = Temp;
  2117  0514  0872               	movf	(pluse@Temp),w
  2118  0515  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  0516  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  0517  0095               	movwf	(21)	;volatile
  2121                           	line	81
  2122                           	
  2123  0518                     l721:	
  2124  0518  0008               	return
  2125                           	opt stack 0
  2126                           GLOBAL	__end_of_pluse
  2127  0519                     	__end_of_pluse:
  2128 ;; =============== function _pluse ends ============
  2129                           
  2130                           	signat	_pluse,4216
  2131                           psect	text227,local,class=CODE,delta=2
  2132                           global __ptext227
  2133  0000                     __ptext227:
  2134                           	global	btemp
  2135  007E                     	btemp set 07Eh
  2136                           
  2137                           	DABS	1,126,2	;btemp
  2138                           	global	wtemp0
  2139  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Oct 24 12:39:54 2018

                         _a 0020                           _b 0022                           _c 0024  
                         _d 0026                           _m 0028                           _v 002E  
                         pc 0002                          _RD 0C60                          _WR 0C61  
              ___awdiv@sign 0076                          fsr 0004                         l710 053B  
                       l703 0588                         l711 0559                         l712 0559  
                       l721 0518                         l706 05B7                         l730 07FD  
                       l715 0538                         l724 0794                         l709 054C  
                       l725 0796                         l718 0746                         l726 0795  
                       l727 07A0                         l728 07FC                         l729 07FD  
                       _GIE 005F                         _RD2 0042                         _RD3 0043  
               divider@Dig1 0030                 divider@Dig2 0032                 divider@Dig3 0034  
               divider@Dig4 0036                 divider@Temp 0038                         fsr0 0004  
                       indf 0000                ___awmod@sign 0076         __end_of_Lcd_Command 0589  
                      l3001 0547                        l3003 054C                        l3011 06B1  
                      l3005 0526                        l3021 0724                        l3013 06C8  
                      l3023 072B                        l3015 06DF                        l3007 0692  
                      l3031 074B                        l3025 0734                        l3017 06F6  
                      l3009 069A                        l3041 075A                        l3033 074E  
                      l3027 073D                        l3019 070D                        l3051 0768  
                      l3043 075C                        l3035 0751                        l1621 05C6  
                      l3061 0787                        l3053 0769                        l3045 0760  
                      l3037 0754                        l3029 0747                        l1630 0616  
                      l1622 05D0                        l1631 061D                        l1623 060C  
                      l3071 07C9                        l3063 078D                        l3055 076E  
                      l3047 0765                        l3039 0757                        l1560 0671  
                      l1624 05E6                        l1561 067F                        l1553 062C  
                      l1625 05DA                        l3073 07CF                        l3065 0796  
                      l3057 077B                        l3049 0767                        l1562 068A  
                      l1554 063A                        l1626 05EB                        l1563 0691  
                      l1555 0680                        l1627 05EC                        l3075 07DC  
                      l3067 07A0                        l3059 0781                        l1556 0652  
                      l1628 05FD                        l1557 0646                        l1629 060B  
                      l3077 07E5                        l3069 07B2                        l1558 0657  
                      l1559 0658                        l3079 07F2                        l2901 064D  
                      l2911 0671                        l2903 0652                        l2921 0691  
                      l2913 0678                        l2905 0658                        l2907 0669  
                      l2915 0680                        l2931 05D0                        l2923 05B8  
                      l2917 0684                        l2909 066F                        l2941 05EC  
                      l2933 05D6                        l2925 05BD                        l2919 068A  
                      l2951 0610                        l2943 05F6                        l2935 05DA  
                      l2927 05C6                        l2881 0514                        l2953 0616  
                      l2945 05FD                        l2937 05E1                        l2929 05CA  
                      l2961 0561                        l2891 0635                        l2883 061E  
                      l2955 061D                        l2947 0604                        l2939 05E6  
                      l2971 057B                        l2963 0562                        l2893 063A  
                      l2885 0623                        l2949 060C                        l2973 057C  
                      l2965 056B                        l2957 055B                        l2981 0590  
                      l2879 050E                        l2895 063C                        l2887 062C  
                      l2975 0585                        l2967 056E                        l2959 0560  
                      l2991 05AA                        l2983 0591                        l2897 0642  
                      l2889 0630                        l2969 057A                        l2993 05AB  
                      l2985 059A                        l2977 058A                        l2899 0646  
                      l2995 05B4                        l2987 059D                        l2979 058F  
                      l2989 05A9                        l2997 053A                        l2999 053B  
                      STR_1 0014                        STR_2 0009                        u2300 0656  
                      u2301 0655                        u2320 0669                        u2400 05EA  
                      u2321 0668                        u2401 05E9                        u2410 05F6  
                      u2315 0659                        u2411 05F5                        u2340 067E  
                      u2260 0623                        u2341 067D                        u2325 0665  
                      u2261 0622                        u2350 0684                        u2270 0630  
                      u2430 060A                        u2335 0672                        u2271 062F  
                      u2431 0609                        u2415 05F2                        u2280 0642  
                      u2440 0610                        u2360 05BD                        u2281 0641  
                      u2425 05FE                        u2361 05BC                        u2370 05CA  
                      u2371 05C9                        u2507 07E0                        u2380 05D6  
                      u2381 05D5                        u2517 07F6                        u2470 0558  
                      u2295 0647                        u2455 0571                        u2527 0595  
                      u2471 0557                        u2480 079F                        u2537 05AF  
                      u2465 05A0                        u2481 079E                        u2395 05DB  
                      u2547 0566                        u2557 0580                        u2497 0774  
                      _TMR2 0011                        _WREN 0C62                        _main 0747  
                      btemp 007E                        start 0000                  _Lcd_String 0539  
                     ?_main 0070             __end_of___awdiv 0692                       _EEADR 010D  
           __end_of___awmod 061E                       _CARRY 0018             ___awdiv@divisor 0070  
                     _T2CON 0012             ___awdiv@counter 0075                       _PORTA 0005  
                     _PORTC 0007                       _PORTD 0008                       _TRISA 0085  
                     _TRISC 0087                       _TRISD 0088             __end_of_divider 0747  
                     _temp1 002A                       _temp2 002C                       _pluse 050E  
                     pclath 000A                       status 0003                       wtemp0 007E  
          __end_of_Lcd_Data 05B8                __end_of_main 0800           _Lcd_Intialization 0526  
        ?_Lcd_Intialization 0070                 _Lcd_Command 055A                      ??_main 007B  
       ??_Lcd_Intialization 0073                      _ADCON0 001F                      _ADCON1 009F  
                    _ADRESH 001E                      _ADRESL 009E                      _EEDATA 010C  
                    _CCPR1H 0016                      _CCPR1L 0015                      _EECON1 018C  
                    _EECON2 018D            ___awdiv@dividend 0072                      ?_pluse 0070  
 __end_of_Lcd_Intialization 0539                   ??___awdiv 0074                   ??___awmod 0074  
          ___awdiv@quotient 0077             ___awmod@divisor 0070             ___awmod@counter 0075  
               ?_Lcd_String 0070                   ??_divider 007B                      clrloop 0507  
                    pluse@x 0070              __pcstackCOMMON 0070               __end_of_pluse 0519  
                 ?_Lcd_Data 0070                     ??_pluse 0072                  __pbssBANK0 0020  
       __size_of_Lcd_String 0021  __size_of_Lcd_Intialization 0013                  __pmaintext 0747  
                   _CCP1CON 0017                  ??_Lcd_Data 0070                     ___awdiv 061E  
                   ___awmod 05B8                ?_Lcd_Command 0070                     _divider 0692  
          ___awmod@dividend 0072        end_of_initialization 0522                ??_Lcd_String 0073  
        __end_of_Lcd_String 055A         start_initialization 0519           __size_of_Lcd_Data 002F  
      __size_of_Lcd_Command 002F               __pcstackBANK0 0030               Lcd_String@Str 0074  
                  ?___awdiv 0070                   __ptext220 0526                   __ptext221 0539  
                 __ptext222 0589                   __ptext223 055A                   __ptext224 05B8  
                 __ptext225 061E                   __ptext226 050E                   __ptext218 0000  
                 __ptext227 0000                   __ptext219 0692                    ?___awmod 0070  
                 __pstrings 0003                    ?_divider 0079                Lcd_Data@Data 0072  
            __size_of_pluse 000B                 __stringbase 0008                    _Lcd_Data 0589  
          __size_of___awdiv 0074            __size_of___awmod 0066            __size_of_divider 00B5  
             __size_of_main 00B9                    clear_ram 0506                   pluse@Temp 0072  
                  divider@x 0079                   stringcode 0003               ??_Lcd_Command 0070  
            Lcd_Command@cmd 0072                    stringdir 0003                    stringtab 0003  
